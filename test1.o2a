#   Test for OISC:2bis
#   copyright(C) 2022 McChuck
#   Released under GPL


                /jump ZERO Main                 # jump is conditional
                                                # ZERO would have been inserted if there was no reference

% Text1: "Hello, starshine!" 0
% Text1*: Text1
% Text2*: Text2
% m1: -1
% p1: 1
% write_char: -1


Main:           /push Text1*
                /call Print_string
                /relj three                     # relative jump is conditional, ZERO inserted
% three: +3                                      # relative jump is from the current instruction pointer
                /push Text2*                    # target of relative jump
                /call Neg_print_string
                /halt

Print_string:   /pop String*
Print_loop:     /push *String*
                /exec write_char
                /sub m1 String*                 # subtract -1 to advance
                /ret *String*                   # Return is conditional, ZERO inserted
                /jump Print_loop
% String*: 0

Neg_print_string:   /pop Neg_string*
Neg_print_loop:     /push *Neg_string*
                    /exec write_char
                    /sub p1 Neg_string*         # negative memory, so subtract 1 to advance
                    /ret *Neg_string*
                    /jump Neg_print_loop
% Neg_string*: 0 -99                            # '-99' just to make finding ZERO inserted into the compiled code easier
                                                # 'ZERO: 0' will be inserted here automatically if ZERO: is undefined

% --NEGATIVE--: --NEGATIVE--

Text2: 32 32 'The earth says, "Hello!"' 10 0
